[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "youtube-mcp-server"
version = "1.0.0"
description = "A comprehensive Model Context Protocol server for YouTube Data API access with intelligent content evaluation"
authors = [
    {name = "YouTube MCP Server Contributors"},
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["youtube", "mcp", "api", "ai", "claude", "model-context-protocol"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Video",
]
requires-python = ">=3.8"
dependencies = [
    "mcp[cli]>=1.4.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/dannySubsense/youtube-mcp-server"
Repository = "https://github.com/dannySubsense/youtube-mcp-server"
Documentation = "https://github.com/dannySubsense/youtube-mcp-server#readme"
Issues = "https://github.com/dannySubsense/youtube-mcp-server/issues"

[project.scripts]
youtube-mcp-server = "youtube_mcp_server:main"

[tool.setuptools]
packages = ["youtube_mcp_server"]

[tool.setuptools.package-data]
youtube_mcp_server = ["*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"